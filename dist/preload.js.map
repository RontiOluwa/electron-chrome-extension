{"version":3,"file":"preload.js","mappings":"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","sources":["webpack://electron-chrome-extensions-test/./src/isomorphic/ipc.ts","webpack://electron-chrome-extensions-test/./src/renderer/event.ts","webpack://electron-chrome-extensions-test/./src/renderer/index.ts","webpack://electron-chrome-extensions-test/external node-commonjs \"electron\"","webpack://electron-chrome-extensions-test/webpack/bootstrap","webpack://electron-chrome-extensions-test/webpack/runtime/compat get default export","webpack://electron-chrome-extensions-test/webpack/runtime/define property getters","webpack://electron-chrome-extensions-test/webpack/runtime/hasOwnProperty shorthand","webpack://electron-chrome-extensions-test/webpack/runtime/make namespace object","webpack://electron-chrome-extensions-test/./src/preload.ts"],"sourcesContent":["export const formatIpcName = (name: string) => `crx-${name}`","import { ipcRenderer } from 'electron'\nimport { formatIpcName } from '../isomorphic/ipc'\n\nconst listenerMap = new Map<string, number>()\n\nexport const addExtensionListener = (extensionId: string, name: string, callback: Function) => {\n  const listenerCount = listenerMap.get(name) || 0\n\n  if (listenerCount === 0) {\n    // TODO: should these IPCs be batched in a microtask?\n    ipcRenderer.send('crx-add-listener', extensionId, name)\n  }\n\n  listenerMap.set(name, listenerCount + 1)\n\n  ipcRenderer.addListener(formatIpcName(name), function (event, ...args) {\n    if (process.env.NODE_ENV === 'development') {\n      console.log(name, '(result)', ...args)\n    }\n    callback(...args)\n  })\n}\n\nexport const removeExtensionListener = (extensionId: string, name: string, callback: any) => {\n  if (listenerMap.has(name)) {\n    const listenerCount = listenerMap.get(name) || 0\n\n    if (listenerCount <= 1) {\n      listenerMap.delete(name)\n\n      ipcRenderer.send('crx-remove-listener', extensionId, name)\n    } else {\n      listenerMap.set(name, listenerCount - 1)\n    }\n  }\n\n  ipcRenderer.removeListener(formatIpcName(name), callback)\n}\n","import { ipcRenderer, contextBridge, webFrame } from 'electron'\nimport { addExtensionListener, removeExtensionListener } from './event'\n\nexport const injectExtensionAPIs = () => {\n  interface ExtensionMessageOptions {\n    noop?: boolean\n    serialize?: (...args: any[]) => any[]\n  }\n\n  const invokeExtension = async function (\n    extensionId: string,\n    fnName: string,\n    options: ExtensionMessageOptions = {},\n    ...args: any[]\n  ) {\n    const callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined\n\n    if (process.env.NODE_ENV === 'development') {\n      console.log(fnName, args)\n    }\n\n    if (options.noop) {\n      console.warn(`${fnName} is not yet implemented.`)\n      if (callback) callback()\n      return\n    }\n\n    if (options.serialize) {\n      args = options.serialize(...args)\n    }\n\n    let result\n\n    try {\n      result = await ipcRenderer.invoke('crx-msg', extensionId, fnName, ...args)\n    } catch (e) {\n      // TODO: Set chrome.runtime.lastError?\n      console.error(e)\n      result = undefined\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      console.log(fnName, '(result)', result)\n    }\n\n    if (callback) {\n      callback(result)\n    } else {\n      return result\n    }\n  }\n\n  const electronContext = {\n    invokeExtension,\n    addExtensionListener,\n    removeExtensionListener,\n  }\n\n  // Function body to run in the main world.\n  // IMPORTANT: This must be self-contained, no closure variable will be included!\n  function mainWorldScript() {\n    // Use context bridge API or closure variable when context isolation is disabled.\n    const electron = ((window as any).electron as typeof electronContext) || electronContext\n\n    const chrome = window.chrome || {}\n    const extensionId = chrome.runtime?.id\n\n    // NOTE: This uses a synchronous IPC to get the extension manifest.\n    // To avoid this, JS bindings for RendererExtensionRegistry would be\n    // required.\n    const manifest: chrome.runtime.Manifest =\n      (extensionId && chrome.runtime.getManifest()) || ({} as any)\n\n    const invokeExtension =\n      (fnName: string, opts: ExtensionMessageOptions = {}) =>\n      (...args: any[]) =>\n        electron.invokeExtension(extensionId, fnName, opts, ...args)\n\n    function imageData2base64(imageData: ImageData) {\n      const canvas = document.createElement('canvas')\n      const ctx = canvas.getContext('2d')\n      if (!ctx) return null\n\n      canvas.width = imageData.width\n      canvas.height = imageData.height\n      ctx.putImageData(imageData, 0, 0)\n\n      return canvas.toDataURL()\n    }\n\n    class ExtensionEvent<T extends Function> implements chrome.events.Event<T> {\n      constructor(private name: string) {}\n\n      addListener(callback: T) {\n        electron.addExtensionListener(extensionId, this.name, callback)\n      }\n      removeListener(callback: T) {\n        electron.removeExtensionListener(extensionId, this.name, callback)\n      }\n\n      getRules(callback: (rules: chrome.events.Rule[]) => void): void\n      getRules(ruleIdentifiers: string[], callback: (rules: chrome.events.Rule[]) => void): void\n      getRules(ruleIdentifiers: any, callback?: any) {\n        throw new Error('Method not implemented.')\n      }\n      hasListener(callback: T): boolean {\n        throw new Error('Method not implemented.')\n      }\n      removeRules(ruleIdentifiers?: string[] | undefined, callback?: (() => void) | undefined): void\n      removeRules(callback?: (() => void) | undefined): void\n      removeRules(ruleIdentifiers?: any, callback?: any) {\n        throw new Error('Method not implemented.')\n      }\n      addRules(\n        rules: chrome.events.Rule[],\n        callback?: ((rules: chrome.events.Rule[]) => void) | undefined\n      ): void {\n        throw new Error('Method not implemented.')\n      }\n      hasListeners(): boolean {\n        throw new Error('Method not implemented.')\n      }\n    }\n\n    class ChromeSetting implements Partial<chrome.types.ChromeSetting> {\n      set() {}\n      get() {}\n      clear() {}\n      // onChange: chrome.types.ChromeSettingChangedEvent\n    }\n\n    type DeepPartial<T> = {\n      [P in keyof T]?: DeepPartial<T[P]>\n    }\n\n    type APIFactoryMap = {\n      [apiName in keyof typeof chrome]: {\n        shouldInject?: () => boolean\n        factory: (base: DeepPartial<typeof chrome[apiName]>) => DeepPartial<typeof chrome[apiName]>\n      }\n    }\n\n    /**\n     * Factories for each additional chrome.* API.\n     */\n    const apiDefinitions: Partial<APIFactoryMap> = {\n      browserAction: {\n        shouldInject: () => !!manifest.browser_action,\n        factory: (base) => {\n          const api = {\n            ...base,\n\n            setTitle: invokeExtension('browserAction.setTitle'),\n            getTitle: invokeExtension('browserAction.getTitle'),\n\n            setIcon: invokeExtension('browserAction.setIcon', {\n              serialize: (details: any) => {\n                if (details.imageData) {\n                  if (details.imageData instanceof ImageData) {\n                    details.imageData = imageData2base64(details.imageData)\n                  } else {\n                    details.imageData = Object.entries(details.imageData).reduce(\n                      (obj: any, pair: any[]) => {\n                        obj[pair[0]] = imageData2base64(pair[1])\n                        return obj\n                      },\n                      {}\n                    )\n                  }\n                }\n\n                return [details]\n              },\n            }),\n\n            setPopup: invokeExtension('browserAction.setPopup'),\n            getPopup: invokeExtension('browserAction.getPopup'),\n\n            setBadgeText: invokeExtension('browserAction.setBadgeText'),\n            getBadgeText: invokeExtension('browserAction.getBadgeText'),\n\n            setBadgeBackgroundColor: invokeExtension('browserAction.setBadgeBackgroundColor'),\n            getBadgeBackgroundColor: invokeExtension('browserAction.getBadgeBackgroundColor'),\n\n            enable: invokeExtension('browserAction.enable', { noop: true }),\n            disable: invokeExtension('browserAction.disable', { noop: true }),\n\n            onClicked: new ExtensionEvent('browserAction.onClicked'),\n          }\n\n          return api\n        },\n      },\n\n      commands: {\n        factory: (base) => {\n          return {\n            ...base,\n            getAll: invokeExtension('commands.getAll'),\n            onCommand: new ExtensionEvent('commands.onCommand'),\n          }\n        },\n      },\n\n      contextMenus: {\n        factory: (base) => {\n          let menuCounter = 0\n          const menuCallbacks: {\n            [key: string]: chrome.contextMenus.CreateProperties['onclick']\n          } = {}\n          const menuCreate = invokeExtension('contextMenus.create')\n\n          let hasInternalListener = false\n          const addInternalListener = () => {\n            api.onClicked.addListener((info, tab) => {\n              const callback = menuCallbacks[info.menuItemId]\n              if (callback && tab) callback(info, tab)\n            })\n            hasInternalListener = true\n          }\n\n          const api = {\n            ...base,\n            create: function (\n              createProperties: chrome.contextMenus.CreateProperties,\n              callback?: Function\n            ) {\n              if (typeof createProperties.id === 'undefined') {\n                createProperties.id = `${++menuCounter}`\n              }\n              if (createProperties.onclick) {\n                if (!hasInternalListener) addInternalListener()\n                menuCallbacks[createProperties.id] = createProperties.onclick\n                delete createProperties.onclick\n              }\n              menuCreate(createProperties, callback)\n              return createProperties.id\n            },\n            update: invokeExtension('contextMenus.update', { noop: true }),\n            remove: invokeExtension('contextMenus.remove'),\n            removeAll: invokeExtension('contextMenus.removeAll'),\n            onClicked: new ExtensionEvent<\n              (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => void\n            >('contextMenus.onClicked'),\n          }\n\n          return api\n        },\n      },\n\n      cookies: {\n        factory: (base) => {\n          return {\n            ...base,\n            get: invokeExtension('cookies.get'),\n            getAll: invokeExtension('cookies.getAll'),\n            set: invokeExtension('cookies.set'),\n            remove: invokeExtension('cookies.remove'),\n            getAllCookieStores: invokeExtension('cookies.getAllCookieStores'),\n            onChanged: new ExtensionEvent('cookies.onChanged'),\n          }\n        },\n      },\n\n      extension: {\n        factory: (base) => {\n          return {\n            ...base,\n            isAllowedIncognitoAccess: () => false,\n            // TODO: Add native implementation\n            getViews: () => [],\n          }\n        },\n      },\n\n      notifications: {\n        factory: (base) => {\n          return {\n            ...base,\n            clear: invokeExtension('notifications.clear'),\n            create: invokeExtension('notifications.create'),\n            getAll: invokeExtension('notifications.getAll'),\n            getPermissionLevel: invokeExtension('notifications.getPermissionLevel'),\n            update: invokeExtension('notifications.update'),\n            onClicked: new ExtensionEvent('notifications.onClicked'),\n            onButtonClicked: new ExtensionEvent('notifications.onButtonClicked'),\n            onClosed: new ExtensionEvent('notifications.onClosed'),\n          }\n        },\n      },\n\n      privacy: {\n        factory: (base) => {\n          return {\n            ...base,\n            network: {\n              networkPredictionEnabled: new ChromeSetting(),\n              webRTCIPHandlingPolicy: new ChromeSetting(),\n            },\n            websites: {\n              hyperlinkAuditingEnabled: new ChromeSetting(),\n            },\n          }\n        },\n      },\n\n      runtime: {\n        factory: (base) => {\n          return {\n            ...base,\n            openOptionsPage: invokeExtension('runtime.openOptionsPage'),\n          }\n        },\n      },\n\n      storage: {\n        factory: (base) => {\n          const local = base && base.local\n          return {\n            ...base,\n            // TODO: provide a backend for browsers to opt-in to\n            managed: local,\n            sync: local,\n          }\n        },\n      },\n\n      tabs: {\n        factory: (base) => {\n          const api = {\n            ...base,\n            create: invokeExtension('tabs.create'),\n            /**\n             * @see https://developer.chrome.com/docs/extensions/reference/tabs/#method-executeScript\n             * @deprecated since chrome 91\n             */\n            executeScript: function (arg1: unknown, arg2: unknown, arg3: unknown) {\n              // Electron's implementation of chrome.tabs.executeScript is in\n              // C++, but it doesn't support implicit execution in the active\n              // tab. To handle this, we need to get the active tab ID and\n              // pass it into the C++ implementation ourselves.\n              if (typeof arg1 === 'object') {\n                api.query(\n                  { active: true, lastFocusedWindow: true },\n                  ([activeTab]: chrome.tabs.Tab[]) => {\n                    api.executeScript(activeTab.id, arg1, arg2)\n                  }\n                )\n              } else {\n                ;(base.executeScript as typeof chrome.tabs.executeScript)(\n                  arg1 as number,\n                  arg2 as chrome.tabs.InjectDetails,\n                  arg3 as () => {}\n                )\n              }\n            },\n            get: invokeExtension('tabs.get'),\n            getCurrent: invokeExtension('tabs.getCurrent'),\n            getAllInWindow: invokeExtension('tabs.getAllInWindow'),\n            insertCSS: invokeExtension('tabs.insertCSS'),\n            query: invokeExtension('tabs.query'),\n            reload: invokeExtension('tabs.reload'),\n            update: invokeExtension('tabs.update'),\n            remove: invokeExtension('tabs.remove'),\n            goBack: invokeExtension('tabs.goBack'),\n            goForward: invokeExtension('tabs.goForward'),\n            onCreated: new ExtensionEvent('tabs.onCreated'),\n            onRemoved: new ExtensionEvent('tabs.onRemoved'),\n            onUpdated: new ExtensionEvent('tabs.onUpdated'),\n            onActivated: new ExtensionEvent('tabs.onActivated'),\n            onReplaced: new ExtensionEvent('tabs.onReplaced'),\n          }\n          return api\n        },\n      },\n\n      webNavigation: {\n        factory: (base) => {\n          return {\n            ...base,\n            getFrame: invokeExtension('webNavigation.getFrame'),\n            getAllFrames: invokeExtension('webNavigation.getAllFrames'),\n            onBeforeNavigate: new ExtensionEvent('webNavigation.onBeforeNavigate'),\n            onCommitted: new ExtensionEvent('webNavigation.onCommitted'),\n            onCompleted: new ExtensionEvent('webNavigation.onCompleted'),\n            onCreatedNavigationTarget: new ExtensionEvent(\n              'webNavigation.onCreatedNavigationTarget'\n            ),\n            onDOMContentLoaded: new ExtensionEvent('webNavigation.onDOMContentLoaded'),\n            onErrorOccurred: new ExtensionEvent('webNavigation.onErrorOccurred'),\n            onHistoryStateUpdated: new ExtensionEvent('webNavigation.onHistoryStateUpdated'),\n            onReferenceFragmentUpdated: new ExtensionEvent(\n              'webNavigation.onReferenceFragmentUpdated'\n            ),\n            onTabReplaced: new ExtensionEvent('webNavigation.onTabReplaced'),\n          }\n        },\n      },\n\n      webRequest: {\n        factory: (base) => {\n          return {\n            ...base,\n            onHeadersReceived: new ExtensionEvent('webRequest.onHeadersReceived'),\n          }\n        },\n      },\n\n      windows: {\n        factory: (base) => {\n          return {\n            ...base,\n            WINDOW_ID_NONE: -1,\n            WINDOW_ID_CURRENT: -2,\n            get: invokeExtension('windows.get'),\n            getCurrent: invokeExtension('windows.getCurrent'),\n            getLastFocused: invokeExtension('windows.getLastFocused'),\n            getAll: invokeExtension('windows.getAll'),\n            create: invokeExtension('windows.create'),\n            update: invokeExtension('windows.update'),\n            remove: invokeExtension('windows.remove'),\n            onCreated: new ExtensionEvent('windows.onCreated'),\n            onRemoved: new ExtensionEvent('windows.onRemoved'),\n            onFocusChanged: new ExtensionEvent('windows.onFocusChanged'),\n          }\n        },\n      },\n    }\n\n    // Initialize APIs\n    Object.keys(apiDefinitions).forEach((key: any) => {\n      const apiName: keyof typeof chrome = key\n      const baseApi = chrome[apiName] as any\n      const api = apiDefinitions[apiName]!\n\n      // Allow APIs to opt-out of being available in this context.\n      if (api.shouldInject && !api.shouldInject()) return\n\n      Object.defineProperty(chrome, apiName, {\n        value: api.factory(baseApi),\n        enumerable: true,\n        configurable: true,\n      })\n    })\n\n    // Remove access to internals\n    delete (window as any).electron\n\n    Object.freeze(chrome)\n\n    void 0 // no return\n  }\n\n  try {\n    // TODO: use another featured/complex name for exposed object\n    // Expose extension IPC to main world\n    contextBridge.exposeInMainWorld('electron', electronContext)\n\n    // Mutate global 'chrome' object with additional APIs in the main world.\n    webFrame.executeJavaScript(`(${mainWorldScript}());`)\n  } catch {\n    // contextBridge threw an error which means we're in the main world so we\n    // can just execute our function.\n    mainWorldScript()\n  }\n}\n","module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { injectExtensionAPIs } from './renderer'\n\n// Only load within extension page context\nif (location.href.startsWith('chrome-extension://')) {\n  injectExtensionAPIs()\n}\n"],"names":["formatIpcName","name","ipcRenderer","listenerMap","Map","addExtensionListener","extensionId","callback","listenerCount","get","send","set","addListener","event","args","process","env","NODE_ENV","console","log","removeExtensionListener","has","delete","removeListener","contextBridge","webFrame","injectExtensionAPIs","invokeExtension","fnName","options","length","pop","undefined","noop","warn","serialize","result","invoke","e","error","electronContext","mainWorldScript","_chrome$runtime","electron","window","chrome","runtime","id","manifest","getManifest","opts","imageData2base64","imageData","canvas","document","createElement","ctx","getContext","width","height","putImageData","toDataURL","ExtensionEvent","constructor","getRules","ruleIdentifiers","Error","hasListener","removeRules","addRules","rules","hasListeners","ChromeSetting","clear","apiDefinitions","browserAction","shouldInject","browser_action","factory","base","api","setTitle","getTitle","setIcon","details","ImageData","Object","entries","reduce","obj","pair","setPopup","getPopup","setBadgeText","getBadgeText","setBadgeBackgroundColor","getBadgeBackgroundColor","enable","disable","onClicked","commands","getAll","onCommand","contextMenus","menuCounter","menuCallbacks","menuCreate","hasInternalListener","addInternalListener","info","tab","menuItemId","create","createProperties","onclick","update","remove","removeAll","cookies","getAllCookieStores","onChanged","extension","isAllowedIncognitoAccess","getViews","notifications","getPermissionLevel","onButtonClicked","onClosed","privacy","network","networkPredictionEnabled","webRTCIPHandlingPolicy","websites","hyperlinkAuditingEnabled","openOptionsPage","storage","local","managed","sync","tabs","executeScript","arg1","arg2","arg3","query","active","lastFocusedWindow","activeTab","getCurrent","getAllInWindow","insertCSS","reload","goBack","goForward","onCreated","onRemoved","onUpdated","onActivated","onReplaced","webNavigation","getFrame","getAllFrames","onBeforeNavigate","onCommitted","onCompleted","onCreatedNavigationTarget","onDOMContentLoaded","onErrorOccurred","onHistoryStateUpdated","onReferenceFragmentUpdated","onTabReplaced","webRequest","onHeadersReceived","windows","WINDOW_ID_NONE","WINDOW_ID_CURRENT","getLastFocused","onFocusChanged","keys","forEach","key","apiName","baseApi","defineProperty","value","enumerable","configurable","freeze","exposeInMainWorld","executeJavaScript","location","href","startsWith"],"sourceRoot":""}